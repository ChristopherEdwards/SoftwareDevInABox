{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates a Software Development Business in a Box",
  "Parameters": {
    "KeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Key pair to log into EC2 instances"
    }
  },
  "Resources": {
    "VPC": {
      "Properties": {
        "CidrBlock": "172.17.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      },
      "Type": "AWS::EC2::VPC"
    },
    "SubnetPublic": {
      "Properties": {
        "CidrBlock": "172.17.0.0/24",
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-SubnetPublic"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::EC2::Subnet"
    },
    "SubnetPrivate": {
      "Properties": {
        "CidrBlock": "172.17.1.0/24",
        "MapPublicIpOnLaunch": false,
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-SubnetPrivate"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::EC2::Subnet"
    },
    "InternetGateway": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      },
      "Type": "AWS::EC2::InternetGateway"
    },
    "VPCGatewayAttachment": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "SubnetPublicRouteTable": {
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-SubnetPublicRouteTable"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "SubnetPublicRoute": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "SubnetPublicRouteTable"
        }
      },
      "DependsOn": "VPCGatewayAttachment",
      "Type": "AWS::EC2::Route"
    },
    "SubnetPublicRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SubnetPublicRouteTable"
        },
        "SubnetId": {
          "Ref": "SubnetPublic"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "SubnetPrivateRouteTable": {
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-SubnetPrivateRouteTable"
                ]
              ]
            }
          }
        ]
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "SubnetPrivateRoute": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "RouteTableId": {
          "Ref": "SubnetPrivateRouteTable"
        }
      },
      "DependsOn": "VPCGatewayAttachment",
      "Type": "AWS::EC2::Route"
    },
    "SubnetPrivateRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "SubnetPrivateRouteTable"
        },
        "SubnetId": {
          "Ref": "SubnetPrivate"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "LaunchConfig": {
      "Properties" : {
        "AssociatePublicIpAddress" : true,
        "EbsOptimized" : false,
        "IamInstanceProfile" : {
          "Ref": "ECSInstanceProfile"
        },
        "ImageId" : "ami-5253c32d",
        "InstanceMonitoring" : true,
        "InstanceType" : "t2.medium",
        "KeyName" : {
          "Ref": "KeyPair"
        },
        "LaunchConfigurationName": "Production",
        "SecurityGroups": [
          {
            "Ref": "productionSecurityGroupPublic"
          },
          {
            "Ref": "productionSecurityGroupPrivate"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "set -ex\n",
                "yum install -y aws-cfn-bootstrap\n",
                "/opt/aws/bin/cfn-init -v ",
                "  --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "  --resource ECSLaunchConfig",
                "  --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "echo ECS_CLUSTER=",
                {
                  "Ref": "ECSProdCluster"
                },
                " >> /etc/ecs/ecs.config\n",
                "service docker restart\n",
                "start ecs\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "  --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "  --resource ECSAutoScalingGroup",
                "  --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    },
    "productionASG":{  
       "Properties": {
          "AutoScalingGroupName": "Production",
          "DesiredCapacity": 2,
          "LaunchConfigurationName" : {
            "Ref": "LaunchConfig"
          },
          "MaxSize": 2,
          "MinSize": 2,
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Ref": "AWS::StackName"
              }
            } 
          ],
          "VPCZoneIdentifier": [ 
            {
              "Ref": "SubnetPublic"
            },
            {
              "Ref": "SubnetPrivate"
            }
          ]
       },
       "Type": "AWS::AutoScaling::AutoScalingGroup"
    },
    "productionSecurityGroupPublic":{
      "Properties" : {
        "GroupName" : "ProductionPublic",
        "GroupDescription" : "Public Security Group for Production Instances & Services",
        "SecurityGroupIngress" : [
          {
            "CidrIp" : "0.0.0.0/0",
            "Description" : "Jira Web Interface",
            "FromPort" : 8081,
            "IpProtocol" : "tcp"
          },
          {
            "CidrIp" : "0.0.0.0/0",
            "Description" : "Confluence Web Interface",
            "FromPort" : 8090,
            "IpProtocol" : "tcp"
          },
          {
            "CidrIp" : "0.0.0.0/0",
            "Description" : "Confluence Collaborative Editing",
            "FromPort" : 8091,
            "IpProtocol" : "tcp"
          },{
            "CidrIp" : "0.0.0.0/0",
            "Description" : "Gitlab Web Interface",
            "FromPort" : 8082,
            "IpProtocol" : "tcp"
          },
          {
            "CidrIp" : "0.0.0.0/0",
            "Description" : "Gitlab SSH",
            "FromPort" : 2222,
            "IpProtocol" : "tcp"
          },
          {
            "CidrIp" : "0.0.0.0/0",
            "Description" : "Jenkins Web Interface",
            "FromPort" : 8080,
            "IpProtocol" : "tcp"
          }
        ],
        "Tags" :  [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          } 
        ],
        "VpcId" : {
          "Ref": "VPC"
        }
     },
     "Type" : "AWS::EC2::SecurityGroup"
    },
    "productionSecurityGroupPrivate":{
      "Properties" : {
        "GroupName" : "ProductionPrivate",
        "GroupDescription" : "Private Security Group for Production Instances & Services",
        "SecurityGroupIngress" : [
          {
            "CidrIp" : "0.0.0.0/0",
            "Description" : "Jenkins Slave",
            "FromPort" : 50000,
            "IpProtocol" : "tcp"
          },
          {
            "CidrIp" : "0.0.0.0/0",
            "Description" : "Postgres",
            "FromPort" : 5432,
            "IpProtocol" : "tcp"
          }
        ],
        "Tags" :  [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          } 
        ],
        "VpcId" : {
          "Ref": "VPC"
        }
     },
     "Type" : "AWS::EC2::SecurityGroup"
    } 
  }
}
